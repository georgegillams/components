name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: [test, snapshot-test]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
      # Checkout the repo
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: generate hash
        run: |
          HASH=$(date | md5sum | cut -d ' ' -f 1)
          ZIP_FILE_NAME="storybook---$HASH"
          echo "HASH=$HASH" >> $GITHUB_ENV
          echo "ZIP_FILE_NAME=$ZIP_FILE_NAME" >> $GITHUB_ENV

      - name: install system dependencies
        run: sudo apt install -y qemu-user-static binfmt-support

      - name: build docker image
        run: |
          echo "zipFileName ${{ env.ZIP_FILE_NAME }}"
          zipFileName=${{ env.ZIP_FILE_NAME }}
          /bin/bash ./scripts/docker/export-prod.sh $zipFileName
          echo "Docker image is $(du -h docker-image.tar)"

      - name: deploy
        run: |
          zipFileName=${{ env.ZIP_FILE_NAME }}
          zip -r $zipFileName.zip docker-image.tar meta.json
          echo "Zip file is $(du -h $zipFileName.zip)"
          echo "${{ secrets.EC2_RSA }}" > ./identityFile.txt
          chmod 400 ./identityFile.txt
          scp -o "StrictHostKeyChecking=no" -i ./identityFile.txt -r ./$zipFileName.zip ubuntu@ec2-13-40-134-151.eu-west-2.compute.amazonaws.com:/home/ubuntu/departure-lounge/

  release:
    runs-on: ubuntu-latest
    # needs: [test, snapshot-test]
    # if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
      # Checkout the repo
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: npm install
        run: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install --frozen-lockfile

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: release
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          GH_TOKEN: ${{ secrets.PUBLISH_GH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken $NPM_PUBLISH_TOKEN
          yarn release
